{"ast":null,"code":"import _slicedToArray from \"/Users/danmagro/Desktop/Homework/google-books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/danmagro/Desktop/Homework/google-books/client/src/pages/Search.js\";\nimport React, { useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport { SaveBtn } from \"../components/SaveBtn\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\n\nfunction Search() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchInput = _useState4[0],\n      setSearchInput = _useState4[1];\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setSearchInput(value);\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (searchInput) {\n      API.searchBook(searchInput).then(function (res) {\n        setBooks(res.data.items);\n        console.log(res.data.items);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n\n  ; //   function handleFormSubmit(event) {\n  //     event.preventDefault();\n  //     if (formObject.title && formObject.author) {\n  //       API.saveBook({\n  //         title: formObject.title,\n  //         author: formObject.author,\n  //         synopsis: formObject.synopsis\n  //       })\n  //         .then(res => loadBooks())\n  //         .catch(err => console.log(err));\n  //     }\n  //   };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"What Books Should I Read?\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"search\",\n    placeholder: \"Search (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !searchInput,\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Submit Book\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, books.length ? books.map(function (book) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      key: book.id,\n      style: {\n        width: \"18rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, book.volumeInfo.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, book.volumeInfo.authors[0]), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, book.searchInfo.textSnippet)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SaveBtn, {\n      onClick: function onClick() {\n        return saveBook(book._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    })));\n  }) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"No Results to Display\")));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/danmagro/Desktop/Homework/google-books/client/src/pages/Search.js"],"names":["React","useState","Jumbotron","Col","Row","Container","Input","FormBtn","SaveBtn","API","Link","Search","books","setBooks","searchInput","setSearchInput","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","searchBook","then","res","data","items","console","log","catch","err","length","map","book","id","width","volumeInfo","title","authors","searchInfo","textSnippet","saveBook","_id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport { SaveBtn } from \"../components/SaveBtn\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction Search() {\n\n  const [books, setBooks] = useState([])\n  const [searchInput, setSearchInput] = useState({})\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setSearchInput(value)\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (searchInput) {\n      API.searchBook(searchInput)\n        .then(res => {\n          setBooks(res.data.items)\n          console.log(res.data.items)\n\n        })\n\n\n        .catch(err => console.log(err));\n    }\n  };\n  //   function handleFormSubmit(event) {\n  //     event.preventDefault();\n  //     if (formObject.title && formObject.author) {\n  //       API.saveBook({\n  //         title: formObject.title,\n  //         author: formObject.author,\n  //         synopsis: formObject.synopsis\n  //       })\n  //         .then(res => loadBooks())\n  //         .catch(err => console.log(err));\n  //     }\n  //   };\n  return (\n    <Container fluid>\n      <Row>\n\n        <Col size=\"sm-12\">\n          <Jumbotron>\n            <h1>What Books Should I Read?</h1>\n          </Jumbotron>\n          <form>\n            <Input\n              onChange={handleInputChange}\n              name=\"search\"\n              placeholder=\"Search (required)\"\n            />\n\n            <FormBtn\n              disabled={!(searchInput)}\n              onClick={handleFormSubmit}\n            >\n              Submit Book\n              </FormBtn>\n\n          </form>\n        </Col>\n      </Row>\n      <Row>\n        {books.length ?\n          books.map(book => (\n            <div className=\"card\" key={book.id} style={{width: \"18rem\"}}>\n              {/* <img className=\"card-img-top\" src=\"...\" alt=\"Card image cap\"></img> */}\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{book.volumeInfo.title}</h5>\n                <p className=\"card-text\">{book.volumeInfo.authors[0]}</p>\n                <p className=\"card-text\">{book.searchInfo.textSnippet}</p>\n              </div>\n              <div className=\"card-body\">\n                <SaveBtn onClick={() => saveBook(book._id)} />\n              </div>\n            </div>\n          )\n          ) : (\n            <h3>No Results to Display</h3>\n          )}\n      </Row>\n    </Container>\n  )\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}